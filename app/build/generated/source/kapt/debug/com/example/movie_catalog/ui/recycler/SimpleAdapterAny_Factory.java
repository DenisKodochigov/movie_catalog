// Generated by Dagger (https://dagger.dev).
package com.example.movie_catalog.ui.recycler;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlin.Unit;
import kotlin.jvm.functions.Function1;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SimpleAdapterAny_Factory implements Factory<SimpleAdapterAny> {
  private final Provider<Function1<Object, Unit>> onClickProvider;

  private final Provider<Integer> modeProvider;

  public SimpleAdapterAny_Factory(Provider<Function1<Object, Unit>> onClickProvider,
      Provider<Integer> modeProvider) {
    this.onClickProvider = onClickProvider;
    this.modeProvider = modeProvider;
  }

  @Override
  public SimpleAdapterAny get() {
    return newInstance(onClickProvider.get(), modeProvider.get());
  }

  public static SimpleAdapterAny_Factory create(Provider<Function1<Object, Unit>> onClickProvider,
      Provider<Integer> modeProvider) {
    return new SimpleAdapterAny_Factory(onClickProvider, modeProvider);
  }

  public static SimpleAdapterAny newInstance(Function1<Object, Unit> onClick, int mode) {
    return new SimpleAdapterAny(onClick, mode);
  }
}
