// Generated by Dagger (https://dagger.dev).
package com.example.movie_catalog.ui.filmography.recycler;

import com.example.movie_catalog.entity.Film;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlin.Unit;
import kotlin.jvm.functions.Function1;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FilmographyRecyclerAdapter_Factory implements Factory<FilmographyRecyclerAdapter> {
  private final Provider<Function1<? super Film, Unit>> onClickProvider;

  public FilmographyRecyclerAdapter_Factory(
      Provider<Function1<? super Film, Unit>> onClickProvider) {
    this.onClickProvider = onClickProvider;
  }

  @Override
  public FilmographyRecyclerAdapter get() {
    return newInstance(onClickProvider.get());
  }

  public static FilmographyRecyclerAdapter_Factory create(
      Provider<Function1<? super Film, Unit>> onClickProvider) {
    return new FilmographyRecyclerAdapter_Factory(onClickProvider);
  }

  public static FilmographyRecyclerAdapter newInstance(Function1<? super Film, Unit> onClick) {
    return new FilmographyRecyclerAdapter(onClick);
  }
}
