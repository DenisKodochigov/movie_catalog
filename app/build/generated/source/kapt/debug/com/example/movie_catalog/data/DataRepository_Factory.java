// Generated by Dagger (https://dagger.dev).
package com.example.movie_catalog.data;

import com.example.movie_catalog.data.api.DataSourceAPI;
import com.example.movie_catalog.data.room.DataSourceDB;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataRepository_Factory implements Factory<DataRepository> {
  private final Provider<DataSourceDB> dataSourceDBProvider;

  private final Provider<DataSourceAPI> dataSourceAPIProvider;

  public DataRepository_Factory(Provider<DataSourceDB> dataSourceDBProvider,
      Provider<DataSourceAPI> dataSourceAPIProvider) {
    this.dataSourceDBProvider = dataSourceDBProvider;
    this.dataSourceAPIProvider = dataSourceAPIProvider;
  }

  @Override
  public DataRepository get() {
    return newInstance(dataSourceDBProvider.get(), dataSourceAPIProvider.get());
  }

  public static DataRepository_Factory create(Provider<DataSourceDB> dataSourceDBProvider,
      Provider<DataSourceAPI> dataSourceAPIProvider) {
    return new DataRepository_Factory(dataSourceDBProvider, dataSourceAPIProvider);
  }

  public static DataRepository newInstance(DataSourceDB dataSourceDB, DataSourceAPI dataSourceAPI) {
    return new DataRepository(dataSourceDB, dataSourceAPI);
  }
}
